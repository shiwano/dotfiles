#!/usr/bin/env bash

set -euo pipefail

usage() {
	local fd="${1:-2}"
	cat <<EOF >&$fd
Usage: git-stash-files

Interactively select files to stash, including untracked files.

Examples:
  git-stash-files
EOF
}

main() {
	if [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
		usage 1
		return 0
	fi

	local files
	files="$(git status -s -u --no-renames)"
	[ -z "$files" ] && return 0

	local selected
	# shellcheck disable=SC2016
	selected="$(echo -e "$files" | fzf -m --preview 'fzf-preview diff $(echo {} | cut -c4-)' --prompt 'GitStash> ' | cut -c4-)"
	[ -z "$selected" ] && return 0

	local new_files=()
	local existing_files=()
	while IFS= read -r file; do
		if git ls-files --error-unmatch "$file" >/dev/null 2>&1; then
			existing_files+=("$file")
		else
			new_files+=("$file")
		fi
	done <<<"$selected"

	if [ ${#new_files[@]} -ne 0 ]; then
		git add "${new_files[@]}"

		if [ ${#existing_files[@]} -ne 0 ]; then
			git stash push -- "${existing_files[@]}" "${new_files[@]}"
		else
			git stash push -- "${new_files[@]}"
		fi
	else
		git stash push -- "${existing_files[@]}"
	fi

	git status
}

main "$@"
