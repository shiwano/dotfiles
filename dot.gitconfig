[user]
  name = Shogo Iwano
  email = shiwano@gmail.com
[github]
  user = shiwano
  token = !security 2>&1 >/dev/null find-generic-password -gs \"GitHub API Token\" | ruby -e 'print $1 if STDIN.gets =~ /^password: \\\"(.*)\\\"$/'
[core]
  excludesfile = ~/.gitignore
  autocrlf = false
[color]
  ui = auto
[alias]
  gommit = commit
  co = checkout
  ci = commit
  cim = commit -m
  cia = commit --amend -C HEAD
  aa = add -A
  au = add -u
  s = status
  st = status
  up = pull --rebase
  diff = diff --color
  di = diff --color
  dica = diff --color --cached
  dist = diff --color --staged
  diw = diff --color --word-diff
  di-csv = diff --color --word-diff-regex="[^[:blank:],]"
  dist-csv = diff --staged --color --word-diff-regex="[^[:blank:],]"
  mt = mergetool
  topic = checkout origin/master -b
  current-branch = describe --all --contains HEAD
  la = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  lg = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  ls = log --stat --summary --color
  log-stat = log --stat --summary --color
  lp = log --patch --color
  log-patch = log --patch --color
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[a-z]"
  unstage = reset HEAD
  us = reset HEAD
  back = reset HEAD~
  cleanup = "!sh -c 'git reset --hard && git clean -fd'"
  contributors = shortlog -s -n -e
  cch= "!f() { git cherry -v "$@" | awk '{ if($1 == \"+\"){ color = \"green\" } if($1 == \"-\"){ color = \"red\" } cmd = \"git show --date=short --no-notes --pretty=format:\\047%C\" color $1 \" %h %Cgreen%cd %Cblue%cn%x09%Creset%s\\047 --summary \" $2; cmd | getline t; close(cmd); print t }' ;}; f"
  checkout-for-review = "!sh -c 'git fetch origin $0 && git checkout FETCH_HEAD'"
  prune-branches = !git branch --delete $(git branch --merged master | grep -v '^*\\|  master$')
  prune-remote-branches = "!sh -c ' \
                           git branch -r --merged | \
                           grep origin | \
                           grep -v \">\" | \
                           grep -v master | \
                           sed \"/>|master/d;/origin/!d;s:origin/::\" | \
                           xargs git push origin --delete \
                         ' __dummy__"

  config-for-aiming = config user.email siwano@aiming-inc.com
  push-for-review = !git push origin HEAD:refs/for/master/$(git current-branch)
  sed = "!LANG=C LC_ALL=C sh -c \"git ls-files $1 | grep -iv '.\\(so\\|ico\\|exe\\|pdf\\|jar\\|gif\\|air\\|zip\\|ser\\|p12\\|pbj\\|swz\\|swc\\|mp3\\|png\\|jpg\\|swf\\)$' | xargs -I{} sed -i '' -e '$2' {} >/dev/null 2>&1\"" # git sed '**/*.cs' s/foo/bar/g
  rank = !git shortlog -sn --no-merges | cat -n
  rename = "!sh -c 'git branch -m `git current-branch` $0'"
  upstream = "!sh -c 'git branch --set-upstream-to=$0 `git current-branch`'"
[merge]
  tool = vimdiff
[mergetool]
  keepBackup = false
[http]
  postBuffer = 524288000
[push]
  default = current
[fetch]
  prune = true
