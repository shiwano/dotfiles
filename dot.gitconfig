[user]
  name = Shogo Iwano
  email = shiwano@gmail.com
[github]
  user = shiwano
  token = !security 2>&1 >/dev/null find-generic-password -gs \"GitHub API Token\" | ruby -e 'print $1 if STDIN.gets =~ /^password: \\\"(.*)\\\"$/'
[core]
  excludesfile = ~/.gitignore
  autocrlf = false
  editor = nvim
[color]
  ui = auto
[alias]
  gommit = commit
  r = restore
  rc = "!sh -c 'git restore -s $0 .'"
  sw = switch
  swd = switch --detach
  ci = commit
  cim = commit -m
  cia = commit --amend -C HEAD
  a = add -A
  au = add -u
  ap = add -p
  s = status
  up = pull --rebase
  diff = diff --color
  di = diff --color
  dica = diff --color --cached
  dist = diff --color --staged
  diw = diff --color --word-diff
  di-csv = diff --color --word-diff-regex="[^[:blank:],]"
  dist-csv = diff --staged --color --word-diff-regex="[^[:blank:],]"
  diff-branch = !git diff $(git main-branch) $(git current-branch)
  mt = mergetool
  merge-prefer-current-branch = merge -X ours
  merge-prefer-target-branch = merge -X theirs
  topic = !git switch $(git main-branch) -c
  topic-develop = switch origin/develop -c
  topic-production = switch origin/production -c
  main-branch = "!sh -c 'if [ `git branch -r --list origin/master` ]; then echo origin/master; else echo origin/main; fi'"
  current-branch = symbolic-ref --short HEAD
  current-remote-branch = "!sh -c 'echo `git upstream-remote`/`git current-branch`'"
  upstream-branch = "!sh -c 'git branch -vv --list `git current-branch` --format=\"%(upstream:short)\"'"
  upstream-remote = "!sh -c 'git upstream-branch | cut -d / -f 1'"
  la = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  lg = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  ls = log --stat --summary --color
  log-stat = log --stat --summary --color
  lp = log --patch --color
  log-patch = log --patch --color
  log-shallow-since = log --date=raw
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[a-z]"
  unstage = reset HEAD
  us = reset HEAD
  back = reset HEAD~
  stash-ls = stash list --stat
  rank = shortlog -s -n -e
  sed = "!sh -c 'cd ${GIT_PREFIX:-.} && git ls-files \"$0\" | xargs sed -i -e \"$1\"'"
  sed-help = "!echo \"git sed '**/*.go' 's/foo/bar/g'\""
  rename = "!sh -c 'git branch -m `git current-branch` $0'"
  upstream = "!sh -c 'git branch --set-upstream-to=$0 `git current-branch`'"
  mru = for-each-ref --format='%(refname:short) (%(authordate:relative))' --sort=committerdate refs/heads/
  reset-remote = "!sh -c 'git fetch && git reset --hard `git current-remote-branch`'"
  upup = "!sh -c 'git fetch && git rebase `git current-remote-branch`'"
  editor = "!sh -c 'if type nvim > /dev/null; then echo nvim; else echo vim; fi'"
  go-version = "!sh -c 'TZ=UTC git --no-pager show --quiet --abbrev=12 --date=\"format-local:%Y%m%d%H%M%S\" --format=\"v0.0.0-%cd-%h\"'"
  log-shallow-since = log --date=raw
  empty-commit = commit --allow-empty -m
[merge]
  tool = nvimdiff
[diff]
  tool = nvimdiff
[difftool "nvimdiff"]
  cmd = "$(git editor) -R -d -c \"wincmd l\" -d \"$LOCAL\" \"$REMOTE\""
[mergetool "nvimdiff"]
  cmd = "$(git editor) -d -c \"4wincmd w | wincmd J\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"  \"$MERGED\""
[http]
  postBuffer = 524288000
[push]
  default = current
[fetch]
  prune = true
[ghq]
  root = ~/code/src
[url "git@github.com:"]
  insteadOf = https://github.com/
[filter "lfs"]
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
