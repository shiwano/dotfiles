# Prefix
set -g prefix C-t
unbind C-b

# General
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ",xterm-256color:smcup@:rmcup@"
set -g history-limit 5000

# Title
set -g set-titles on
set -g set-titles-string "#{b:pane_current_path}"
set -g automatic-rename on
set -g automatic-rename-format "#{b:pane_current_path}"

# Pane
set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=blue"
set -g base-index 1

# Status Line
set -g status-interval 5
set -g status-left-length 50
set -g status-right-length 50
set -g status-bg "#3B4261"
set -g status-fg "blue"
set -g status-left "#[fg=black,bg=blue] \uf007 #(whoami) #[default]#[fg=blue,bg=#3B4261]\ue0b0#[default]"
set -g status-right "#[fg=blue,bg=#3B4261]\ue0b3#[default]#[fg=blue,bg=#3B4261] \uf017  %m/%d %H:%M #[default]"
set -g status-position top

# Window Status
setw -g window-status-separator ""
setw -g window-status-style "bg=#3B4261,fg=blue"
setw -g window-status-current-style "bg=#3B4261,fg=blue"
setw -g window-status-format "   \uec01 #W(#I)  "
setw -g window-status-current-format "#[fg=#3B4261,bg=#1a1b26]\ue0b0#[default]#[fg=blue,bg=#1a1b26]  \uebf2 #W(#I) #[default]#[fg=#3B4261,bg=#1a1b26]\ue0b2#[default]"
set -g renumber-windows on

# Message
set -g message-style "bold,fg=red,bg=black"

# Mode
setw -g mode-style "bg=blue,fg=black"
setw -g mode-keys vi

# Key Bindings
bind r confirm-before -p " reload config? (y/n):" "source-file ~/.tmux.conf"
bind C-o last-window
bind q confirm-before -p " kill session? (y/n):" "kill-session"
bind C-d confirm-before -p " kill window? (y/n):" "kill-window"
bind d confirm-before -p " kill panel? (y/n):" "kill-pane"
bind j next-window
bind k previous-window
bind n new-window -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}" \; resize-pane -R 50
bind s swap-pane -U
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5
bind C-k select-pane -U
bind C-j select-pane -D
bind C-h select-pane -L
bind C-l select-pane -R
bind C-t copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi i send-keys -X cancel
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "awk '{gsub(/^[^\uE0B0]*\uE0B0[^\uE0B0]*\uE0B0/, \"$\"); gsub(/\uE0A0 [^ ]*$/, \"\"); gsub(/[ ]*$/, \"\"); if (!match(\$0, /^[$ ]*$/)) print}' | pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "awk '{gsub(/^[^\uE0B0]*\uE0B0[^\uE0B0]*\uE0B0/, \"$\"); gsub(/\uE0A0 [^ ]*$/, \"\"); gsub(/[ ]*$/, \"\"); if (!match(\$0, /^[$ ]*$/)) print}' | pbcopy"
bind -T copy-mode-vi Y send-keys -X copy-pipe-end-of-line-and-cancel "awk '{gsub(/^[^\uE0B0]*\uE0B0[^\uE0B0]*\uE0B0/, \"$\"); gsub(/\uE0A0 [^ ]*$/, \"\"); gsub(/[ ]*$/, \"\"); if (!match(\$0, /^[$ ]*$/)) print}' | pbcopy"
bind -T copy-mode-vi D send-keys -X copy-pipe-end-of-line-and-cancel "awk '{gsub(/^[^\uE0B0]*\uE0B0[^\uE0B0]*\uE0B0/, \"$\"); gsub(/\uE0A0 [^ ]*$/, \"\"); gsub(/[ ]*$/, \"\"); if (!match(\$0, /^[$ ]*$/)) print}' | pbcopy"

# For neovim
set -g escape-time 10
set -gq allow-passthrough on # For image.nvim
set -g visual-activity off   # For image.nvim
